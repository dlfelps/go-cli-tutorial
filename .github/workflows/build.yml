name: Build and Release

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.22'

      - name: Install dependencies
        run: go mod download

      - name: Run tests
        run: go test -v ./...

  build:
    name: Build
    needs: test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux, windows, darwin]
        goarch: [amd64, arm64]
        exclude:
          - goos: windows
            goarch: arm64
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.22'

      - name: Build binary
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
        run: |
          output_name="gocli-teacher"
          if [ "${{ matrix.goos }}" = "windows" ]; then
            output_name="gocli-teacher.exe"
          fi
          go build -v -o build/$output_name

      - name: Upload build artifact
        uses: actions/upload-artifact@v3
        with:
          name: gocli-teacher-${{ matrix.goos }}-${{ matrix.goarch }}
          path: build/

  release:
    name: Release
    if: startsWith(github.ref, 'refs/tags/v')
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Download all artifacts
        uses: actions/download-artifact@v3
        with:
          path: artifacts

      - name: Prepare artifacts for release
        run: |
          mkdir -p release
          cp -r artifacts/* release/
          cd release
          find . -type d -name "gocli-teacher-*" | while read dir; do
            os_arch=${dir#./gocli-teacher-}
            os=$(echo $os_arch | cut -d '-' -f 1)
            arch=$(echo $os_arch | cut -d '-' -f 2)
            if [ "$os" = "windows" ]; then
              zip -r "gocli-teacher-${os}-${arch}.zip" "$dir"
            else
              tar -czf "gocli-teacher-${os}-${arch}.tar.gz" "$dir"
            fi
          done

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            release/*.zip
            release/*.tar.gz
          draft: false
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}